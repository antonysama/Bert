# Goal is to run Bert server & client. 
pip install tensorflow-gpu
pip install -U bert-serving-server bert-serving-client
# After all installs run bert-serving-start -model_dir uncased_L-12_H-768_A-12 -num_worker=4
#(or run the below code, from the bert repo : python example8.py -model_dir=uncased_L-12_H-768_A-12)

#Error: The name tf.logging.ERROR is deprecated. Please use tf.compat.v1.logging.ERROR instead (see below):
#https://stackoverflow.com/questions/55081911/tensorflow-2-0-0-alpha0-tf-logging-set-verbosity:

#on python run ...
import logging
logging.getLogger("tensorflow").setLevel(logging.ERROR)
import sys
import tensorflow
import numpy as np
from bert_serving.server import BertServer
from bert_serving.client import BertClient
from termcolor import colored
from bert_serving.server.helper import get_run_args

if __name__ == '__main__':
    args = get_run_args()
    server = BertServer(args)
    server.start()
    server.join()

from termcolor import colored
prefix_q = '##### **Q:** '
topk = 5

with open('README.md') as fp:
    questions = [v.replace(prefix_q, '').strip() for v in fp if v.strip() and v.startswith(prefix_q)]
    print('%d questions loaded, avg. len of %d' % (len(questions), np.mean([len(d.split()) for d in questions])))
    
with BertClient(ip='192.168.0.10') as bc:
    doc_vecs = bc.encode(questions)

    while True:
        query = input(colored('your question: ', 'green'))
        query_vec = bc.encode([query])[0]
        # compute normalized dot product as score
        score = np.sum(query_vec * doc_vecs, axis=1) / np.linalg.norm(doc_vecs, axis=1)
        topk_idx = np.argsort(score)[::-1][:topk]
        print('top %d questions similar to "%s"' % (topk, colored(query, 'green')))
        for idx in topk_idx:
            print('> %s\t%s' % (colored('%.1f' % score[idx], 'cyan'), colored(questions[idx], 'yellow')))


# References:
# Staring server & client: https://buildmedia.readthedocs.org/media/pdf/bert-as-service/latest/bert-as-service.pdf
# Tutorials: https://bert-as-service.readthedocs.io/en/latest/tutorial/token-embed.html
# Repo: https://github.com/google-research/bert
# Examples: https://github.com/hanxiao/bert-as-service/blob/master/README.md
